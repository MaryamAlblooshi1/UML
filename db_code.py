# -*- coding: utf-8 -*-
"""DB CODE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zYtb3zJSNFzS34rYIra8SaMZd10J1BPW
"""

class Passenger:
    def __init__(self, name, frequent_flyer_number=None):
        self.name = name
        self.frequent_flyer_number = frequent_flyer_number

    def get_full_name(self):
        return self.name


class Flight:
    def __init__(self, number, departure_airport, arrival_airport, departure_date, departure_time, arrival_time):
        self.number = number
        self.departure_airport = departure_airport
        self.arrival_airport = arrival_airport
        self.departure_date = departure_date
        self.departure_time = departure_time
        self.arrival_time = arrival_time
        self.seats = []

    def is_seat_available(self, seat_number):
        return seat_number in self.seats


class Baggage:
    def __init__(self, weight, special_items=[]):
        self.weight = weight
        self.special_items = special_items


class Receipt:
    def __init__(self, amount, description):
        self.amount = amount
        self.description = description


class BoardingPass:
    def __init__(self, passenger, flight, seat_number, gate, boarding_time):
        self.passenger = passenger
        self.flight = flight
        self.seat_number = seat_number
        self.gate = gate
        self.boarding_time = boarding_time

    def get_full_name(self):
        return self.passenger.get_full_name()


class System:
    def check_in_baggage(self, passenger, boarding_pass, baggage):
        weight_limit = 20
        fee_per_kg = 20
        if baggage.weight > weight_limit:
            excess_weight = baggage.weight - weight_limit
            fee = excess_weight * fee_per_kg
            receipt = Receipt(fee, f"Excess baggage fee for {excess_weight} kg")
        else:
            receipt = None

        return boarding_pass, receipt

    def change_seat(self, passenger, boarding_pass, desired_seat):
        if not boarding_pass.flight.is_seat_available(desired_seat):
            print(f"Sorry, seat {desired_seat} is not available.")
            return boarding_pass

        boarding_pass.seat_number = desired_seat

        return boarding_pass

 #boarding pass
passenger = Passenger("John Doe")
flight = Flight("1234", "JFK", "LAX", "2024-02-27", "10:00", "13:00")
flight.seats = ["15A", "15B", "16C"]
boarding_pass = BoardingPass(passenger, flight, "15B", "A2", "09:30")
baggage = Baggage(25, ["Laptop"])

system = System()

# Check-in baggage
updated_boarding_pass, receipt = system.check_in_baggage(passenger, boarding_pass, baggage)

if receipt:
    print(f"Please pay the excess baggage fee of ${receipt.amount}")
else:
    print("Your baggage complies with weight restrictions.")

print("Updated boarding pass:")
print(f"Passenger: {updated_boarding_pass.passenger.get_full_name()}")
print(f"Flight: {updated_boarding_pass.flight.number}")
print(f"Seat: {updated_boarding_pass.seat_number}")
print(f"Gate: {updated_boarding_pass.gate}")
print(f"Boarding time: {updated_boarding_pass.get_formatted_boarding_time()}")
class System:
    def change_seat(self, passenger, boarding_pass, desired_seat):
        if not boarding_pass.flight.isSeatAvailable(desired_seat):
            print(f"Sorry, seat {desired_seat} is not available.")
            return boarding_pass
        boarding_pass.seatNumber = desired_seat

        return boarding_pass

 # Seat Change
passenger = Passenger("Jane Doe")
flight = Flight("4567", "LAX", "ORD", "2024-02-27", "14:00", "17:00")
flight.seats = ["1A", "2B", "3C", "5E"]  # Set available seats
boarding_pass = BoardingPass(passenger, flight, "1A", "B12", "13:30")

system = System()
desired_seat = "5E"
updated_boarding_pass = system.change_seat(passenger, boarding_pass, desired_seat)

if updated_boarding_pass is boarding_pass:
    pass
else:
    print("Seat changed successfully!")

print("Updated boarding pass:")
print(f"Passenger: {updated_boarding_pass.passenger.get_full_name()}")
print(f"Flight: {updated_boarding_pass.flight.number}")
print(f"Seat: {updated_boarding_pass.seatNumber}")
print(f"Gate: {updated_boarding_pass.gate}")
print(f"Boarding time: {updated_boarding_pass.get_formatted_boarding_time()}")